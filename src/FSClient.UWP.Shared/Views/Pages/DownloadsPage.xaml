<Page x:Class="FSClient.UWP.Shared.Views.Pages.DownloadsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:FSClient.UWP.Shared.Views.Pages"
      xmlns:winTriggers="using:WindowsStateTriggers"
      xmlns:extensions="using:FSClient.UWP.Shared.Extensions"
      xmlns:controls="using:FSClient.UWP.Shared.Views.Controls"
      xmlns:items="using:FSClient.ViewModels.Items"
      x:Name="Page">

  <Page.Resources>
    <ResourceDictionary>
      <CollectionViewSource x:Key="ViewSource"
                            x:Name="ViewSource"
                            Source="{x:Bind ViewModel.Downloads, Mode=OneWay}"
                            IsSourceGrouped="{x:Bind ViewModel.GroupItems, Mode=OneWay}" />
    </ResourceDictionary>
  </Page.Resources>

  <extensions:PageAppBarExtension.Top>
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="8" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <TextBlock x:Name="HeaderBlock"
                 Margin="8,0"
                 Grid.Column="0"
                 Text="{x:Bind ConverterParameter='NavigationPageType_Downloads', Converter={StaticResource LocalizationConverter}}"
                 VerticalAlignment="Center" />
      <AutoSuggestBox x:Name="AutoSuggestBox"
                      Grid.Column="0"
                      MinWidth="{StaticResource SearchBoxWidth}"
                      HorizontalAlignment="Right"
                      Background="Transparent"
                      PlaceholderText="{x:Bind ConverterParameter='PageAppBar_Search', Converter={StaticResource LocalizationConverter}}"
                      VerticalAlignment="Center"
                      extensions:CommandExtension.TextChangedCommand="{x:Bind ViewModel.UpdateSourceCommand}"
                      Text="{x:Bind ViewModel.SearchRequest, Mode=TwoWay, Converter={StaticResource BindToObjectConverter}}"
                      TextBoxStyle="{StaticResource TranparentSearchTextBoxStyle}" />
      <StackPanel x:Name="TopBar"
                  x:DeferLoadStrategy="Lazy"
                  Grid.Column="2"
                  Orientation="Horizontal"
                  Visibility="Collapsed">
        <AppBarButton x:Name="DeleteButton"
                      Icon="Delete"
                      extensions:CompatExtension.AccessKey="D"
                      extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='DownloadsPage_DeleteSelectedCommand_ToolTip', Converter={StaticResource LocalizationConverter}}"
                      Visibility="Collapsed"
                      Command="{x:Bind ViewModel.DeleteSelectedCommand}"
                      Style="{StaticResource ClientAppBarButtonStyle}">
          <extensions:ContextMenuExtension.ContextFlyout>
            <MenuFlyout>
              <MenuFlyoutItem extensions:CompatExtension.Icon="Remove"
                              Text="{x:Bind ConverterParameter='DownloadsPage_DeleteSelectedCommand_FromList', Converter={StaticResource LocalizationConverter}}"
                              Command="{x:Bind ViewModel.RemoveSelectedCommand}" />
              <MenuFlyoutItem extensions:CompatExtension.Icon="Delete"
                              Text="{x:Bind ConverterParameter='DownloadsPage_DeleteSelectedCommand_FromDevice', Converter={StaticResource LocalizationConverter}}"
                              Command="{x:Bind ViewModel.DeleteSelectedCommand}" />
            </MenuFlyout>
          </extensions:ContextMenuExtension.ContextFlyout>
        </AppBarButton>
        <AppBarButton x:Name="IsAllSelectedButton"
                      Icon="SelectAll"
                      extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='ListView_SelectAll', Converter={StaticResource LocalizationConverter}}"
                      extensions:CompatExtension.AccessKey="T"
                      Visibility="Collapsed"
                      Command="{x:Bind ViewModel.AllSelectedToggleCommand}"
                      Style="{StaticResource ClientAppBarButtonStyle}" />
        <AppBarSeparator x:Name="SelectionSeparator"
                         Visibility="Collapsed" />
        <AppBarToggleButton x:Name="SelectionModeToggle"
                            Icon="Bullets"
                            extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='ListView_GroupMode', Converter={StaticResource LocalizationConverter}}"
                            extensions:CompatExtension.AccessKey="C"
                            IsChecked="{x:Bind ViewModel.IsInSelectionMode, Mode=TwoWay, Converter={StaticResource BindToObjectConverter}}"
                            Style="{StaticResource ClientAppBarToggleButtonStyle}" />
        <AppBarButton x:Name="OpenFolderButton"
                      Grid.Column="1"
                      Command="{x:Bind ViewModel.OpenFolderCommand}"
                      Content="{x:Bind ConverterParameter='DownloadsPage_OpenFolder', Converter={StaticResource LocalizationConverter}}"
                      extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='DownloadsPage_OpenFolder_ToolTip', Converter={StaticResource LocalizationConverter}}"
                      extensions:CompatExtension.AccessKey="O"
                      Icon="OpenLocal"
                      Style="{StaticResource ClientAppBarButtonStyle}" />
      </StackPanel>
    </Grid>
  </extensions:PageAppBarExtension.Top>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>
    <controls:CloseableAlert x:Name="BackgroundDownloadAlert"
                             x:DeferLoadStrategy="Lazy"
                             IsOpen="{x:Bind ViewModel.ShowBackgroundDownloadAlert, Mode=TwoWay}"
                             Text="{x:Bind ConverterParameter='DownloadsPage_BackgroundDownloadAlert', Converter={StaticResource LocalizationConverter}}"
                             Visibility="Collapsed" />
    <TextBlock x:Name="DownloadsPlaceholderBlock"
               Grid.Row="0"
               Grid.RowSpan="2"
               VerticalAlignment="Center"
               Text="{x:Bind ConverterParameter='ListView_NothingFound', Converter={StaticResource LocalizationConverter}}"
               TextAlignment="Center" />

    <controls:AdaptiveGridView x:Name="DownloadsGrid"
                               Grid.Row="1"
                               ItemsSource="{x:Bind ViewSource.View, Mode=OneWay}"
                               extensions:ListViewBaseExtension.SelectedItems="{x:Bind ViewModel.SelectedItems}"
                               extensions:ScrollViewerExtensions.EnableMiddleClickScrolling="True"
                               DesiredWidth="400"
                               SelectionMode="None"
                               IsItemClickEnabled="True"
                               ItemClick="DownloadsGrid_ItemClick"
                               Loaded="DownloadsGrid_Loaded"
                               Visibility="Collapsed">
      <controls:AdaptiveGridView.ItemContainerStyle>
        <Style TargetType="GridViewItem">
          <Setter Property="Background" Value="{ThemeResource ItemBackgroundBrush}" />
          <Setter Property="HorizontalContentAlignment" Value="Stretch" />
          <Setter Property="Margin" Value="5" />
          <Setter Property="VerticalContentAlignment" Value="Stretch" />
        </Style>
      </controls:AdaptiveGridView.ItemContainerStyle>
      <controls:AdaptiveGridView.GroupStyle>
        <GroupStyle>
          <GroupStyle.HeaderTemplate>
            <DataTemplate>
              <Grid>
                <TextBlock Text="{Binding Key}" />
              </Grid>
            </DataTemplate>
          </GroupStyle.HeaderTemplate>
        </GroupStyle>
      </controls:AdaptiveGridView.GroupStyle>
      <controls:AdaptiveGridView.ItemTemplate>
        <DataTemplate x:DataType="items:DownloadFileViewModel">
          <Grid ToolTipService.ToolTip="{x:Bind FilePath}">
            <extensions:ContextMenuExtension.ContextFlyout>
              <MenuFlyout Placement="Bottom">
                <MenuFlyoutItem Command="{x:Bind PauseFileCommand}"
                                Text="{x:Bind ConverterParameter='DownloadsPage_File_Pause', Converter={StaticResource LocalizationConverter}}" />
                <MenuFlyoutItem Command="{x:Bind OpenFileCommand}"
                                Text="{x:Bind ConverterParameter='DownloadsPage_File_OpenFile', Converter={StaticResource LocalizationConverter}}" />
                <MenuFlyoutItem Command="{x:Bind OpenFolderCommand}"
                                Text="{x:Bind ConverterParameter='DownloadsPage_File_OpenFolder', Converter={StaticResource LocalizationConverter}}" />
                <MenuFlyoutItem Command="{x:Bind RemoveFileCommand}"
                                Text="{x:Bind ConverterParameter='DownloadsPage_File_RemoveFromList', Converter={StaticResource LocalizationConverter}}" />
                <MenuFlyoutItem Command="{x:Bind DeleteFileCommand}"
                                Text="{x:Bind ConverterParameter='DownloadsPage_File_RemoveFromDevice', Converter={StaticResource LocalizationConverter}}" />
              </MenuFlyout>
            </extensions:ContextMenuExtension.ContextFlyout>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="4" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="4" />
            </Grid.ColumnDefinitions>
            <AppBarButton Style="{StaticResource ClientAppBarButtonStyle}"
                          Width="{StaticResource AppButtonWidth}"
                          Height="{StaticResource AppButtonHeight}"
                          Command="{x:Bind PauseFileCommand}">
              <AppBarButton.Icon>
                <SymbolIcon Symbol="{x:Bind local:DownloadsPage.ConvertStatusToIcon(Status, PauseSupported), Mode=OneWay}" />
              </AppBarButton.Icon>
            </AppBarButton>
            <StackPanel Grid.Column="2">
              <TextBlock Text="{x:Bind FileName}" />
              <ProgressBar Visibility="{x:Bind IsProgressActive, Mode=OneWay, Converter={StaticResource BooleanConverter}}"
                           Value="{x:Bind Progress, Mode=OneWay}"
                           IsIndeterminate="{x:Bind IsIndeterminate, Mode=OneWay}"
                           Maximum="100" />
              <TextBlock Text="{x:Bind StatusString, Mode=OneWay}" />
            </StackPanel>
          </Grid>
        </DataTemplate>
      </controls:AdaptiveGridView.ItemTemplate>
    </controls:AdaptiveGridView>


    <CommandBar x:Name="BottomCommandBar"
                Grid.Row="2"
                Visibility="Collapsed"
                x:DeferLoadStrategy="Lazy"
                Background="{ThemeResource BottomBarBackgroundBrush}">
      <CommandBar.PrimaryCommands>
        <AppBarButton x:Name="DeleteBottomButton"
                      Icon="Delete"
                      extensions:CompatExtension.AccessKey="D"
                      extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='DownloadsPage_DeleteSelectedCommand_ToolTip', Converter={StaticResource LocalizationConverter}}"
                      Visibility="Collapsed"
                      Command="{x:Bind ViewModel.DeleteSelectedCommand}"
                      Style="{StaticResource ClientAppBarButtonStyle}">
          <extensions:ContextMenuExtension.ContextFlyout>
            <MenuFlyout>
              <MenuFlyoutItem extensions:CompatExtension.Icon="Remove"
                              Text="{x:Bind ConverterParameter='DownloadsPage_DeleteSelectedCommand_FromList', Converter={StaticResource LocalizationConverter}}"
                              Command="{x:Bind ViewModel.RemoveSelectedCommand}" />
              <MenuFlyoutItem extensions:CompatExtension.Icon="Delete"
                              Text="{x:Bind ConverterParameter='DownloadsPage_DeleteSelectedCommand_FromDevice', Converter={StaticResource LocalizationConverter}}"
                              Command="{x:Bind ViewModel.DeleteSelectedCommand}" />
            </MenuFlyout>
          </extensions:ContextMenuExtension.ContextFlyout>
        </AppBarButton>
        <AppBarButton x:Name="IsAllSelectedBottomButton"
                      Icon="SelectAll"
                      Label="{x:Bind ConverterParameter='ListView_SelectAll', Converter={StaticResource LocalizationConverter}}"
                      extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='ListView_SelectAll', Converter={StaticResource LocalizationConverter}}"
                      extensions:CompatExtension.AccessKey="T"
                      Visibility="Collapsed"
                      Command="{x:Bind ViewModel.AllSelectedToggleCommand}"
                      Style="{StaticResource ClientAppBarButtonStyle}" />
        <AppBarSeparator x:Name="BottomSelectionSeparator"
                         Visibility="Collapsed" />
        <AppBarToggleButton x:Name="SelectionModeBottomToggle"
                            Icon="Bullets"
                            extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='ListView_GroupMode', Converter={StaticResource LocalizationConverter}}"
                            extensions:CompatExtension.AccessKey="C"
                            IsChecked="{x:Bind ViewModel.IsInSelectionMode, Mode=TwoWay, Converter={StaticResource BindToObjectConverter}}"
                            Style="{StaticResource ClientAppBarToggleButtonStyle}" />
        <AppBarButton x:Name="OpenFolderBottomButton"
                      Grid.Column="1"
                      Command="{x:Bind ViewModel.OpenFolderCommand}"
                      Content="{x:Bind ConverterParameter='DownloadsPage_OpenFolder', Converter={StaticResource LocalizationConverter}}"
                      extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='DownloadsPage_OpenFolder_ToolTip', Converter={StaticResource LocalizationConverter}}"
                      extensions:CompatExtension.AccessKey="O"
                      Icon="OpenLocal"
                      Style="{StaticResource ClientAppBarButtonStyle}" />
      </CommandBar.PrimaryCommands>
    </CommandBar>

    <VisualStateManager.VisualStateGroups>

      <VisualStateGroup x:Name="PageSizeStateGroup">
        <VisualState x:Name="MediumState">
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowWindowWidth}" />
          </VisualState.StateTriggers>
        </VisualState>
        <VisualState x:Name="MobileState">
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="0" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="OpenFolderButton.Width" Value="{StaticResource NarrowWindowAppBarButtonWidth}" />
            <Setter Target="SelectionModeToggle.Width" Value="{StaticResource NarrowWindowAppBarButtonWidth}" />
            <Setter Target="DeleteButton.Width" Value="{StaticResource NarrowWindowAppBarButtonWidth}" />
            <Setter Target="IsAllSelectedButton.Width" Value="{StaticResource NarrowWindowAppBarButtonWidth}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="CommandBarVisibilityGroup">
        <VisualState x:Name="ShowTopBarWithHeaderState">
          <VisualState.StateTriggers>
            <!--<winTriggers:CompositeStateTrigger Operator="Or">
              <winTriggers:CompositeStateTrigger Operator="And">
                <winTriggers:AdaptiveTrigger MinWindowWidth="{StaticResource NarrowWindowWidth}" />-->
                <StateTrigger IsActive="{x:Bind ViewModel.IsInSelectionMode, Mode=OneWay}" />
              <!--</winTriggers:CompositeStateTrigger>
              <winTriggers:CompositeStateTrigger Operator="And">
                <winTriggers:AdaptiveTrigger MinWindowWidth="{StaticResource MobileWindowWidth}" />
                <winTriggers:IsFalseStateTrigger Value="{x:Bind ViewModel.IsInSelectionMode, Mode=OneWay}" />
              </winTriggers:CompositeStateTrigger>
            </winTriggers:CompositeStateTrigger>-->
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="TopBar.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="ShowTopBarState">
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="{StaticResource MobileWindowWidth}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderBlock.Visibility" Value="Collapsed" />
            <Setter Target="AutoSuggestBox.HorizontalAlignment" Value="Stretch" />
            <Setter Target="AutoSuggestBox.PlaceholderText" Value="{x:Bind ConverterParameter='NavigationPageType_Downloads', Converter={StaticResource LocalizationConverter}}" />
            <Setter Target="TopBar.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="ShowBottomBarState">
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="0" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="HeaderBlock.Visibility" Value="Collapsed" />
            <Setter Target="AutoSuggestBox.HorizontalAlignment" Value="Stretch" />
            <Setter Target="AutoSuggestBox.PlaceholderText" Value="{x:Bind ConverterParameter='NavigationPageType_Downloads', Converter={StaticResource LocalizationConverter}}" />
            <Setter Target="BottomCommandBar.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="MobileBackgroundDownloadAlertGroup">
        <VisualState>
          <VisualState.StateTriggers>
            <!--<winTriggers:DeviceFamilyStateTrigger DeviceFamily="Mobile" />-->
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <!--<Setter Target="BackgroundDownloadAlert.Visibility" Value="Visible" />-->
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="SelectionModeTogglingGroup">
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind ViewModel.IsInSelectionMode, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="DownloadsGrid.SelectionMode" Value="Multiple" />
            <Setter Target="DownloadsGrid.IsItemClickEnabled" Value="False" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="IsAllSelectedGroup">
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind ViewModel.IsAllSelected, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="IsAllSelectedButton.Icon" Value="ClearSelection" />
            <Setter Target="IsAllSelectedBottomButton.Icon" Value="ClearSelection" />
            <Setter Target="IsAllSelectedButton.(extensions:ToolTipServiceEx.ToolTip)" Value="{x:Bind ConverterParameter='ListView_UnselectAll', Converter={StaticResource LocalizationConverter}}" />
            <Setter Target="IsAllSelectedBottomButton.(extensions:ToolTipServiceEx.ToolTip)" Value="{x:Bind ConverterParameter='ListView_UnselectAll', Converter={StaticResource LocalizationConverter}}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="DownloadProgressGroup">
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind ViewModel.HasAnyDownload, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="DownloadsPlaceholderBlock.Visibility" Value="Collapsed" />
            <Setter Target="DownloadsGrid.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="SelectionVisibilityGroup">
        <VisualState x:Name="SelectionWideState">
          <VisualState.StateTriggers>
            <!--<winTriggers:CompositeStateTrigger Operator="And">-->
              <StateTrigger IsActive="{x:Bind ViewModel.IsInSelectionMode, Mode=OneWay}" />
              <!--<winTriggers:AdaptiveTrigger MinWindowWidth="{StaticResource MobileWindowWidth}" />-->
            <!--</winTriggers:CompositeStateTrigger>-->
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="DeleteButton.Visibility" Value="Visible" />
            <Setter Target="IsAllSelectedButton.Visibility" Value="Visible" />
            <Setter Target="SelectionSeparator.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="SelectionMobileState">
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind ViewModel.IsInSelectionMode, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="DeleteBottomButton.Visibility" Value="Visible" />
            <Setter Target="IsAllSelectedBottomButton.Visibility" Value="Visible" />
            <Setter Target="BottomSelectionSeparator.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="OpenFolderButtonIsDisabled">
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind ViewModel.OpenFolderCommand.IsCanExecuteWithoutParameter, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="OpenFolderButton.Visibility" Value="Visible" />
            <Setter Target="OpenFolderBottomButton.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page> 