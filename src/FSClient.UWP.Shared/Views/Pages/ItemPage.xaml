<Page x:Class="FSClient.UWP.Shared.Views.Pages.ItemPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:winTriggers="using:WindowsStateTriggers"
      xmlns:extensions="using:FSClient.UWP.Shared.Extensions"
      xmlns:controls="using:FSClient.UWP.Shared.Views.Controls"
      xmlns:pages="using:FSClient.UWP.Shared.Views.Pages"
      xmlns:items="using:FSClient.ViewModels.Items"
      x:Name="Page"
      NavigationCacheMode="Required">

  <Page.Resources>
    <ResourceDictionary>
      <Storyboard x:Key="BackgroundAppear"
                  x:Name="BackgroundAppear">
        <DoubleAnimation Storyboard.TargetName="BackgroundImage"
                         Storyboard.TargetProperty="Opacity"
                         From="0"
                         To="0.6"
                         Duration="0:0:1.5" />
        <DoubleAnimation Storyboard.TargetName="FadeBorder"
                         Storyboard.TargetProperty="Opacity"
                         From="0"
                         To="0.3"
                         Duration="0:0:1.5" />
      </Storyboard>
    </ResourceDictionary>
  </Page.Resources>

  <extensions:PageAppBarExtension.Top>
    <Grid x:Name="TopCommandBar"
          Background="Transparent">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <TextBlock x:Name="HeaderTextBlock"
                 Grid.Column="0"
                 Margin="8,0,0,0"
                 VerticalAlignment="Center"
                 Text="{x:Bind ItemViewModel.CurrentItem.Title, Mode=OneWay}" />
      <StackPanel Grid.Column="1"
                  Orientation="Horizontal">
        <AppBarButton x:Name="CalendarAppButton"
                      extensions:CompatExtension.AccessKey="C"
                      Icon="Calendar"
                      Style="{StaticResource ClientAppBarButtonStyle}"
                      extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='ItemPage_CalendarAppButton_ToolTip', Converter={StaticResource LocalizationConverter}}"
                      Visibility="Collapsed">
          <AppBarButton.Flyout>
            <Flyout ScrollViewer.VerticalScrollMode="Disabled">
              <Flyout.FlyoutPresenterStyle>
                <Style TargetType="FlyoutPresenter">
                  <Setter Property="MinHeight" Value="100" />
                  <Setter Property="MaxHeight" Value="500" />
                </Style>
              </Flyout.FlyoutPresenterStyle>
              <controls:EpisodesCalendar Width="330"
                                         Source="{x:Bind ItemViewModel.CurrentItemCalendar, Mode=OneWay}"
                                         ShowCalendarHelpInfo="{x:Bind ItemViewModel.ShowCalendarHelpInfo, Mode=TwoWay}" />
            </Flyout>
          </AppBarButton.Flyout>
        </AppBarButton>
        <AppBarButton x:Name="ShowFavButton"
                      extensions:CompatExtension.AccessKey="F"
                      Icon="OutlineStar"
                      IsEnabled="{x:Bind ItemViewModel.IsListsSupported, Mode=OneWay}"
                      Style="{StaticResource ClientAppBarButtonStyle}"
                      extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='ItemPage_AddToFavorite_ToolTip', Converter={StaticResource LocalizationConverter}}"
                      Visibility="Collapsed">
          <AppBarButton.Flyout>
            <controls:FavMenuFlyout ItemInfo="{x:Bind ItemViewModel.CurrentItem, Mode=OneWay}" />
          </AppBarButton.Flyout>
        </AppBarButton>
        <AppBarButton x:Name="ShowCommandsButton"
                      Width="{StaticResource NarrowWindowAppBarButtonWidth}"
                      extensions:CompatExtension.AccessKey="M"
                      Icon="More"
                      Style="{StaticResource ClientAppBarButtonStyle}"
                      extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='PageAppBar_More_Tooltip', Converter={StaticResource LocalizationConverter}}"
                      Visibility="Collapsed">
          <AppBarButton.Flyout>
            <MenuFlyout>
              <MenuFlyoutItem extensions:CompatExtension.AccessKey="S"
                              Command="{x:Bind ItemViewModel.ShareItemCommand}"
                              Text="{x:Bind ConverterParameter='ItemPage_ShareItemCommand', Converter={StaticResource LocalizationConverter}}"
                              extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='ItemPage_ShareItemCommand_ToolTip', Converter={StaticResource LocalizationConverter}}"
                              Visibility="{x:Bind IsXbox, Converter={StaticResource BooleanConverter}, ConverterParameter=!}">
                <extensions:CompatExtension.Icon>
                  <FontIcon Glyph="&#xE72D;"
                            FontFamily="Segoe MDL2 Assets" />
                </extensions:CompatExtension.Icon>
              </MenuFlyoutItem>
              <MenuFlyoutItem extensions:CompatExtension.AccessKey="B"
                              Command="{x:Bind ItemViewModel.OpenItemInBrowserCommand}"
                              Text="{x:Bind ConverterParameter='ItemPage_OpenItemInBrowserCommand', Converter={StaticResource LocalizationConverter}}"
                              extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='ItemPage_OpenItemInBrowserCommand_ToolTip', Converter={StaticResource LocalizationConverter}}">
                <extensions:CompatExtension.Icon>
                  <SymbolIcon Symbol="Globe" />
                </extensions:CompatExtension.Icon>
              </MenuFlyoutItem>
              <MenuFlyoutItem extensions:CompatExtension.AccessKey="P"
                              Command="{x:Bind ItemViewModel.PinToStartCommand}"
                              Text="{x:Bind ConverterParameter='ItemPage_PinToStartCommand', Converter={StaticResource LocalizationConverter}}"
                              extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='ItemPage_PinToStartCommand_ToolTip', Converter={StaticResource LocalizationConverter}}"
                              Visibility="{x:Bind IsXbox, Converter={StaticResource BooleanConverter}, ConverterParameter=!}">
                <extensions:CompatExtension.Icon>
                  <SymbolIcon Symbol="Pin" />
                </extensions:CompatExtension.Icon>
              </MenuFlyoutItem>
            </MenuFlyout>
          </AppBarButton.Flyout>
        </AppBarButton>

        <AppBarButton x:Name="DownloadSelectedButton"
                      Icon="Download"
                      extensions:CompatExtension.AccessKey="D"
                      extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='FilesPage_DownloadSelected_ToolTip', Converter={StaticResource LocalizationConverter}}"
                      IsEnabled="{x:Bind FileViewModel.IsAnySelected, Mode=OneWay}"
                      Visibility="Collapsed"
                      Style="{StaticResource ClientAppBarButtonStyle}">
          <AppBarButton.Flyout>
            <MenuFlyout>
              <MenuFlyoutItem Text="{x:Bind ConverterParameter='FilesPage_DownloadSelected_Download', Converter={StaticResource LocalizationConverter}}"
                              extensions:CompatExtension.Icon="Download"
                              Command="{x:Bind FileViewModel.DownloadSelectedCommand}" />
              <MenuFlyoutItem Text="{x:Bind ConverterParameter='FilesPage_DownloadSelected_DownloadAsM3u8', Converter={StaticResource LocalizationConverter}}"
                              extensions:CompatExtension.Icon="List"
                              Command="{x:Bind FileViewModel.SaveSelectedAsPlaylistCommand}" />
            </MenuFlyout>
          </AppBarButton.Flyout>
        </AppBarButton>
        <AppBarToggleButton x:Name="FileIsWatchedSelectedButton"
                            extensions:CompatExtension.AccessKey="W"
                            extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='FilesPage_FileIsWatchedSelectedToggle_On_ToolTip', Converter={StaticResource LocalizationConverter}}"
                            Visibility="Collapsed"
                            Style="{StaticResource ClientAppBarToggleButtonStyle}"
                            IsChecked="{x:Bind FileViewModel.IsWatchedSelected, Mode=OneWay, Converter={StaticResource BindToObjectConverter}}"
                            Command="{x:Bind FileViewModel.WatchedSelectedToggleCommand}">
          <AppBarToggleButton.Icon>
            <FontIcon x:Name="FileIsWatchedSelectedButtonIcon"
                      Glyph="&#xE930;"
                      FontFamily="Segoe MDL2 Assets" />
          </AppBarToggleButton.Icon>
        </AppBarToggleButton>
        <AppBarToggleButton x:Name="FileIsAllSelectedButton"
                            Icon="SelectAll"
                            extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='ListView_SelectAll', Converter={StaticResource LocalizationConverter}}"
                            extensions:CompatExtension.AccessKey="T"
                            Visibility="Collapsed"
                            Style="{StaticResource ClientAppBarToggleButtonStyle}"
                            IsChecked="{x:Bind FileViewModel.IsAllSelected, Mode=TwoWay, Converter={StaticResource BooleanConverter}}" />

        <AppBarSeparator x:Name="FileSelectionSeparator"
                         Visibility="Collapsed" />
        <AppBarToggleButton x:Name="FileSelectionModeToggle"
                            Icon="Bullets"
                            extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='ListView_GroupMode', Converter={StaticResource LocalizationConverter}}"
                            extensions:CompatExtension.AccessKey="C"
                            Visibility="Collapsed"
                            Style="{StaticResource ClientAppBarToggleButtonStyle}"
                            IsChecked="{x:Bind FileViewModel.IsInSelectionMode, Mode=TwoWay, Converter={StaticResource BooleanConverter}}" />

        <AppBarButton x:Name="RefreshButton"
                      extensions:CompatExtension.AccessKey="R"
                      Command="{x:Bind FileViewModel.RefreshFolderCommand}"
                      Icon="Refresh"
                      Style="{StaticResource ClientAppBarButtonStyle}"
                      extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='FilesPage_RefreshFolderCommand', Converter={StaticResource LocalizationConverter}}"
                      Visibility="Collapsed" />
        <AppBarButton x:Name="GoUpButton"
                      extensions:CompatExtension.AccessKey="U"
                      Command="{x:Bind FileViewModel.GoUpCommand}"
                      Icon="Up"
                      Style="{StaticResource ClientAppBarButtonStyle}"
                      extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='FilesPage_GoUpCommand', Converter={StaticResource LocalizationConverter}}"
                      Visibility="Collapsed" />
        <AppBarButton x:Name="DownloadButton"
                      extensions:CompatExtension.AccessKey="D"
                      Command="{x:Bind FileViewModel.DownloadCommand}"
                      CommandParameter="{x:Bind MediaViewModel.CurrentVideo, Mode=OneWay}"
                      Icon="Download"
                      Style="{StaticResource ClientAppBarButtonStyle}"
                      extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='VideoPage_DownloadVideoCommand', Converter={StaticResource LocalizationConverter}}"
                      Visibility="Collapsed" />
        <AppBarButton x:DeferLoadStrategy="Lazy"
                      x:Name="ShowVideoCommandsButton"
                      Width="{StaticResource NarrowWindowAppBarButtonWidth}"
                      extensions:CompatExtension.AccessKey="M"
                      Icon="More"
                      Style="{StaticResource ClientAppBarButtonStyle}"
                      extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='PageAppBar_More_Tooltip', Converter={StaticResource LocalizationConverter}}"
                      Visibility="Collapsed">
          <AppBarButton.Flyout>
            <MenuFlyout>
              <MenuFlyoutItem extensions:CompatExtension.AccessKey="B"
                              Command="{x:Bind FileViewModel.OpenInBrowserCommand}"
                              CommandParameter="{x:Bind MediaViewModel.CurrentFile, Mode=OneWay}"
                              Text="{x:Bind ConverterParameter='VideoPage_OpenInBrowserCommand', Converter={StaticResource LocalizationConverter}}"
                              extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='VideoPage_OpenInBrowserCommand_ToolTip', Converter={StaticResource LocalizationConverter}}">
                <extensions:CompatExtension.Icon>
                  <SymbolIcon Symbol="Globe" />
                </extensions:CompatExtension.Icon>
              </MenuFlyoutItem>
              <MenuFlyoutItem extensions:CompatExtension.AccessKey="W"
                              Click="InNewWindowButton_Click"
                              Text="{x:Bind ConverterParameter='VideoPage_OpenInNewWindowButtonCommand', Converter={StaticResource LocalizationConverter}}"
                              extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='VideoPage_OpenInNewWindowButtonCommand_ToolTip', Converter={StaticResource LocalizationConverter}}">
                <extensions:CompatExtension.Icon>
                  <FontIcon Glyph="&#xE8A7;"
                            FontFamily="Segoe MDL2 Assets" />
                </extensions:CompatExtension.Icon>
              </MenuFlyoutItem>
              <MenuFlyoutItem x:Name="ShareGrabbedFrameButton"
                              extensions:CompatExtension.AccessKey="F"
                              Click="ShareGrabbedFrameButton_Click"
                              Text="{x:Bind ConverterParameter='VideoPage_ShareGrabbedFrameCommand', Converter={StaticResource LocalizationConverter}}"
                              Visibility="{x:Bind PlayerControl.IsFrameGrabberSupported}"
                              extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='VideoPage_ShareGrabbedFrameCommand', Converter={StaticResource LocalizationConverter}}">
                <extensions:CompatExtension.Icon>
                  <FontIcon Glyph="&#xE72D;"
                            FontFamily="Segoe MDL2 Assets" />
                </extensions:CompatExtension.Icon>
              </MenuFlyoutItem>
            </MenuFlyout>
          </AppBarButton.Flyout>
        </AppBarButton>
      </StackPanel>
    </Grid>
  </extensions:PageAppBarExtension.Top>

  <Grid>
    <Grid Visibility="{x:Bind ItemViewModel.Settings.ShowImageBackground, Mode=OneWay, Converter={StaticResource BooleanConverter}}">
      <Image x:Name="BackgroundImage"
             HorizontalAlignment="Center"
             Opacity="0.6"
             Stretch="UniformToFill" />
      <Border x:Name="FadeBorder"
              Background="Black"
              Opacity="0.4"
              Visibility="{x:Bind BackgroundImage.Source, Mode=OneWay, Converter={StaticResource BooleanConverter}}" />
    </Grid>
    <Pivot x:Name="ItemPivot"
           Loaded="Pivot_Loaded"
           extensions:PivotExtension.HeaderVisibility="Visible"
           SelectionChanged="Pivot_OnSelectionChanged">
      <Pivot.ItemContainerStyle>
        <Style TargetType="PivotItem">
          <Setter Property="Margin" Value="0" />
          <Setter Property="Padding" Value="0" />
        </Style>
      </Pivot.ItemContainerStyle>
      <PivotItem x:Name="DescriptionPage"
                 Header="{x:Bind ConverterParameter='NavigationPageType_ItemInfo', Converter={StaticResource LocalizationConverter}}">
        <Grid>
          <Grid.Resources>
            <ResourceDictionary>
              <SolidColorBrush x:Key="ButtonBackgroundDisabled"
                               Color="Transparent" />
              <SolidColorBrush x:Key="ButtonRevealBackgroundDisabled"
                               Color="Transparent" />
            </ResourceDictionary>
          </Grid.Resources>
          <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <controls:AdaptiveGridView x:Name="HeaderedWithInfoReviews"
                                     Margin="0"
                                     DesiredWidth="400"
                                     ItemsSource="{x:Bind ReviewViewModel.ReviewsSource, Mode=OneWay}"
                                     extensions:ScrollViewerExtensions.EnableMiddleClickScrolling="True"
                                     SelectionMode="None">
            <controls:AdaptiveGridView.Header>
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <controls:ItemPageDetails x:Name="ItemPageDetails"
                                          Rating="{x:Bind ItemViewModel.Rating, Mode=OneWay}"
                                          Background="{ThemeResource ItemBackgroundBrush}"
                                          OpenItemInBrowserCommand="{x:Bind ItemViewModel.OpenItemInBrowserCommand}"
                                          OpenTrailerCommand="{x:Bind FileViewModel.OpenTrailerCommand}"
                                          VoteCommand="{x:Bind ItemViewModel.VoteCommand}" />
                <Grid Grid.Row="1"
                      Margin="4"
                      Background="{ThemeResource ItemBackgroundBrush}"
                      Visibility="{x:Bind ReviewViewModel.IsSupportedByItem, Mode=OneWay, Converter={StaticResource BooleanConverter}}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>
                  <TextBlock Margin="8,8,0,0"
                             FontSize="24"
                             Text="{x:Bind ConverterParameter='ItemsPage_ReviewsBlock', Converter={StaticResource LocalizationConverter}}" />
                  <AppBarButton x:Name="AddReviewAppBarButton"
                                Grid.Row="0"
                                Grid.Column="1"
                                Width="{StaticResource AppButtonWidth}"
                                Height="{StaticResource AppButtonHeight}"
                                Margin="0,0,8,0"
                                extensions:CompatExtension.AccessKey="R"
                                Click="ShowAddReviewDialog"
                                Icon="Add"
                                Style="{StaticResource ClientAppBarButtonStyle}"
                                extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='ItemsPage_AddReviewAppBarCommand_ToolTip', Converter={StaticResource LocalizationConverter}}"
                                Visibility="{x:Bind ReviewViewModel.CanSendReview, Mode=OneWay, Converter={StaticResource BooleanConverter}}" />

                  <TextBlock x:Name="NoReviewsBlock"
                             Grid.Row="1"
                             Grid.Column="0"
                             Grid.ColumnSpan="2"
                             Margin="8,8,0,16"
                             FontSize="16"
                             Text="{x:Bind ConverterParameter='ListView_NothingFound', Converter={StaticResource LocalizationConverter}}"
                             Visibility="Collapsed" />
                </Grid>
              </Grid>
            </controls:AdaptiveGridView.Header>
            <controls:AdaptiveGridView.ItemContainerStyle>
              <Style TargetType="GridViewItem">
                <Setter Property="extensions:CompatExtension.IsFocusEngagementEnabled" Value="True" />
                <Setter Property="Background" Value="{ThemeResource ItemBackgroundBrush}" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="4" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
              </Style>
            </controls:AdaptiveGridView.ItemContainerStyle>
            <controls:AdaptiveGridView.ItemTemplate>
              <DataTemplate x:DataType="items:ReviewListItemViewModel">
                <controls:ItemReview Review="{x:Bind}" />
              </DataTemplate>
            </controls:AdaptiveGridView.ItemTemplate>
          </controls:AdaptiveGridView>
          <CommandBar x:Name="BottomCommandBar"
                      Grid.Row="1"
                      x:DeferLoadStrategy="Lazy"
                      ClosedDisplayMode="Minimal"
                      Visibility="Collapsed"
                      Background="{ThemeResource BottomBarBackgroundBrush}">
            <CommandBar.PrimaryCommands>
              <AppBarButton extensions:CompatExtension.AccessKey="S"
                            Command="{x:Bind ItemViewModel.ShareItemCommand}"
                            Label="{x:Bind ConverterParameter='ItemPage_ShareItemCommand', Converter={StaticResource LocalizationConverter}}"
                            Style="{StaticResource ClientAppBarButtonStyle}"
                            extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='ItemPage_ShareItemCommand_ToolTip', Converter={StaticResource LocalizationConverter}}"
                            Visibility="{x:Bind IsXbox, Converter={StaticResource BooleanConverter}, ConverterParameter=!}">
                <AppBarButton.Icon>
                  <FontIcon FontFamily="Segoe MDL2 Assets"
                            Glyph="&#xE72D;" />
                </AppBarButton.Icon>
              </AppBarButton>
              <AppBarButton extensions:CompatExtension.AccessKey="B"
                            Command="{x:Bind ItemViewModel.OpenItemInBrowserCommand}"
                            Icon="Globe"
                            Label="{x:Bind ConverterParameter='ItemPage_OpenItemInBrowserCommand', Converter={StaticResource LocalizationConverter}}"
                            Style="{StaticResource ClientAppBarButtonStyle}"
                            extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='ItemPage_OpenItemInBrowserCommand_ToolTip', Converter={StaticResource LocalizationConverter}}" />
              <AppBarButton extensions:CompatExtension.AccessKey="P"
                            Command="{x:Bind ItemViewModel.PinToStartCommand}"
                            Icon="Pin"
                            Label="{x:Bind ConverterParameter='ItemPage_PinToStartCommand', Converter={StaticResource LocalizationConverter}}"
                            Style="{StaticResource ClientAppBarButtonStyle}"
                            extensions:ToolTipServiceEx.ToolTip="{x:Bind ConverterParameter='ItemPage_PinToStartCommand_ToolTip', Converter={StaticResource LocalizationConverter}}"
                            Visibility="{x:Bind IsXbox, Converter={StaticResource BooleanConverter}, ConverterParameter=!}" />
            </CommandBar.PrimaryCommands>
          </CommandBar>
        </Grid>
      </PivotItem>
      <PivotItem x:Name="FilesPage"
                 Header="{x:Bind ConverterParameter='NavigationPageType_Files', Converter={StaticResource LocalizationConverter}}">
        <pages:FilesView x:Name="FilesView" />
      </PivotItem>
      <PivotItem x:Name="VideoPage"
                 Header="{x:Bind ConverterParameter='NavigationPageType_Video', Converter={StaticResource LocalizationConverter}}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>
          <controls:CloseableAlert x:Name="VideoAttention"
                                   BorderThickness="1"
                                   Padding="4"
                                   IsOpen="{x:Bind ItemViewModel.ShowVideoAttention, Mode=TwoWay}"
                                   Text="{x:Bind ConverterParameter='VideoPage_ShowVideoAttention', Converter={StaticResource LocalizationConverter}}"
                                   Visibility="{Binding HasAnyItem, Converter={StaticResource BooleanConverter}}" />
          <controls:PlayerControl Grid.Row="1"
                                  x:DeferLoadStrategy="Lazy"
                                  x:Name="PlayerControl"
                                  Visibility="Collapsed"
                                  CurrentVideo="{x:Bind MediaViewModel.CurrentVideo, Mode=TwoWay}"
                                  GoNextCommand="{x:Bind MediaViewModel.GoNextCommand}"
                                  GoPreviousCommand="{x:Bind MediaViewModel.GoPreviousCommand}"
                                  HandleVideoStopedCommand="{x:Bind MediaViewModel.HandleVideoStopedCommand}"
                                  SetAndPreloadFileCommand="{x:Bind MediaViewModel.SetAndPreloadFileCommand}"
                                  SetPositionForCurrentCommand="{x:Bind MediaViewModel.SetPositionForCurrentCommand}"
                                  PlaylistEnded="PlayerControl_PlaylistEnded"
                                  VerticalContentAlignment="Stretch"
                                  HorizontalContentAlignment="Stretch" />
        </Grid>
      </PivotItem>
    </Pivot>

    <ProgressRing x:Name="ItemLoadingProgressBar"
                  Width="{StaticResource ProgressRingSize}"
                  Height="{StaticResource ProgressRingSize}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  IsActive="True"
                  Visibility="Collapsed" />

    <VisualStateManager.VisualStateGroups>

      <VisualStateGroup x:Name="FilesIsSelectionModeModeGroup">
        <VisualState>
          <VisualState.StateTriggers>
            <!--<winTriggers:CompositeStateTrigger Operator="And">
              <winTriggers:EqualsStateTrigger EqualTo="{x:Bind FilesPage}"
                                              Value="{x:Bind ItemPivot.SelectedItem, Mode=OneWay}" />
              <winTriggers:AdaptiveTrigger MinWindowWidth="{StaticResource MobileWindowWidth}" />-->
              <StateTrigger IsActive="{x:Bind FileViewModel.IsInSelectionMode, Mode=OneWay}" />
            <!--</winTriggers:CompositeStateTrigger>-->
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FileIsAllSelectedButton.Visibility" Value="Visible" />
            <Setter Target="FileSelectionSeparator.Visibility" Value="Visible" />
            <Setter Target="DownloadSelectedButton.Visibility" Value="Visible" />
            <Setter Target="FileIsWatchedSelectedButton.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="FilesSelectionVisibility">
        <VisualState>
          <VisualState.StateTriggers>
            <!--<winTriggers:CompositeStateTrigger Operator="And">
              <winTriggers:EqualsStateTrigger EqualTo="{x:Bind FilesPage}"
                                              Value="{x:Bind ItemPivot.SelectedItem, Mode=OneWay}" />
              <winTriggers:AdaptiveTrigger MinWindowWidth="{StaticResource MobileWindowWidth}" />
            </winTriggers:CompositeStateTrigger>-->
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FileSelectionModeToggle.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <!--<winTriggers:EqualsStateTrigger EqualTo="{x:Bind FilesPage}"
                                            Value="{x:Bind ItemPivot.SelectedItem, Mode=OneWay}" />-->
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FilesView.CommandBarVisibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="FilesIsWatchedSelectedModeGroup">
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind FileViewModel.IsWatchedSelected, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FileIsWatchedSelectedButtonIcon.Glyph" Value="&#xEC61;" />
            <Setter Target="FileIsWatchedSelectedButton.(extensions:ToolTipServiceEx.ToolTip)" Value="{x:Bind ConverterParameter='FilesPage_FileIsWatchedSelectedToggle_Off_ToolTip', Converter={StaticResource LocalizationConverter}}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="FilesIsAllSelectedGroup">
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind FileViewModel.IsAllSelected, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FileIsAllSelectedButton.Icon" Value="ClearSelection" />
            <Setter Target="FileIsAllSelectedButton.(extensions:ToolTipServiceEx.ToolTip)" Value="{x:Bind ConverterParameter='ListView_UnselectAll', Converter={StaticResource LocalizationConverter}}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="IsWatchedButtonEnabledGroup">
        <VisualState>
          <VisualState.StateTriggers>
            <!--<winTriggers:IsFalseStateTrigger Value="{x:Bind FileViewModel.IsAnySelected, Mode=OneWay}" />-->
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="FileIsWatchedSelectedButton.IsEnabled" Value="False" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="CalendarButtonStateGroup">
        <VisualState>
          <VisualState.StateTriggers>
            <!--<winTriggers:CompositeStateTrigger Operator="And">
              <winTriggers:EqualsStateTrigger EqualTo="{x:Bind DescriptionPage}"
                                              Value="{x:Bind ItemPivot.SelectedItem, Mode=OneWay}" />
              <winTriggers:NotEqualStateTrigger Value="{x:Bind ItemViewModel.CurrentItemCalendar, Mode=OneWay}"
                                                NotEqualTo="{x:Null}" />
            </winTriggers:CompositeStateTrigger>-->
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="CalendarAppButton.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="ItemLoadProgressGroup">
        <VisualState x:Name="ItemLoadingProgressState">
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind ItemViewModel.RefreshCurrentItemCommand.IsExecuting, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ItemPivot.Visibility" Value="Collapsed" />
            <Setter Target="ItemLoadingProgressBar.Visibility" Value="Visible" />
            <Setter Target="HeaderTextBlock.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="NoReviewsGroup">
        <VisualState>
          <VisualState.StateTriggers>
            <!--<winTriggers:IsFalseStateTrigger Value="{x:Bind Path=ReviewViewModel.HasAnyReview, Mode=OneWay, FallbackValue=True}" />-->
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="NoReviewsBlock.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="ButtonPageSizeStateGroup">
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowWindowWidth}" />
          </VisualState.StateTriggers>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="0" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="DownloadButton.Width" Value="{StaticResource NarrowWindowAppBarButtonWidth}" />
            <Setter Target="GoUpButton.Width" Value="{StaticResource NarrowWindowAppBarButtonWidth}" />
            <Setter Target="RefreshButton.Width" Value="{StaticResource NarrowWindowAppBarButtonWidth}" />
            <Setter Target="ShowFavButton.Width" Value="{StaticResource NarrowWindowAppBarButtonWidth}" />
            <Setter Target="CalendarAppButton.Width" Value="{StaticResource NarrowWindowAppBarButtonWidth}" />
            <Setter Target="FileSelectionModeToggle.Width" Value="{StaticResource NarrowWindowAppBarButtonWidth}" />
            <Setter Target="DownloadSelectedButton.Width" Value="{StaticResource NarrowWindowAppBarButtonWidth}" />
            <Setter Target="FileIsWatchedSelectedButton.Width" Value="{StaticResource NarrowWindowAppBarButtonWidth}" />
            <Setter Target="FileIsAllSelectedButton.Width" Value="{StaticResource NarrowWindowAppBarButtonWidth}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="PagesStateGroup">
        <VisualState x:Name="VideoPageStates">
          <VisualState.StateTriggers>
            <!--<winTriggers:EqualsStateTrigger EqualTo="{x:Bind VideoPage}"
                                            Value="{x:Bind ItemPivot.SelectedItem, Mode=OneWay}" />-->
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="DownloadButton.Visibility" Value="Visible" />
            <Setter Target="ShowVideoCommandsButton.Visibility" Value="Visible" />
            <Setter Target="PlayerControl.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>

        <VisualState x:Name="FilesPageState">
          <VisualState.StateTriggers>
            <!--<winTriggers:EqualsStateTrigger EqualTo="{x:Bind FilesPage}"
                                            Value="{x:Bind ItemPivot.SelectedItem, Mode=OneWay}" />-->
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="GoUpButton.Visibility" Value="Visible" />
            <Setter Target="RefreshButton.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>

        <VisualState x:Name="WideAndZeroPageState">
          <VisualState.StateTriggers>
            <!--<winTriggers:CompositeStateTrigger Operator="And">
              <winTriggers:EqualsStateTrigger EqualTo="{x:Bind DescriptionPage}"
                                              Value="{x:Bind ItemPivot.SelectedItem, Mode=OneWay}" />
              <winTriggers:AdaptiveTrigger MinWindowWidth="{StaticResource MobileWindowWidth}" />
            </winTriggers:CompositeStateTrigger>-->
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ShowCommandsButton.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>

        <VisualState x:Name="MobileAndZeroPageState">
          <VisualState.StateTriggers>
            <!--<winTriggers:EqualsStateTrigger EqualTo="{x:Bind DescriptionPage}"
                                            Value="{x:Bind ItemPivot.SelectedItem, Mode=OneWay}" />-->
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="BottomCommandBar.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="FirstPageStateGroup">
        <VisualState>
          <VisualState.StateTriggers>
            <!--<winTriggers:EqualsStateTrigger EqualTo="0"
                                            Value="{x:Bind ItemPivot.SelectedIndex, Mode=OneWay}" />-->
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ShowFavButton.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="FavStarStateGroup">
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind ItemViewModel.IsInAnyList, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ShowFavButton.Icon" Value="Favorite" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="FullWindowGroup"
                        CurrentStateChanging="FullWindowGroup_CurrentStateChanging">
        <VisualState x:Name="NormalMode" />
        <VisualState x:Name="FullWindowMode">
          <VisualState.Setters>
            <Setter Target="ItemPivot.IsTabStop" Value="False" />
            <Setter Target="VideoAttention.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>